#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#include <cmath>
#include <vector>
#include <queue>

#define INF 1000000001
using namespace std;

// 2805 - 나무 자르기
int n;
long long m, high, result;
vector<long long> trees;


void input() {
    cin >> n >> m;
    trees.assign(n, 0);

    for(int i = 0; i < n; ++i){
        cin >> trees[i];
        high = max(high, trees[i]);
    }
}

bool isPossible(int height){
    long long len = 0;
    for(int i = 0; i < n; ++i){
        if(trees[i] > height){
            len += (trees[i] - height);
        }
    }

    if(len >= m){
        return true;
    }
    else{
        return false;
    }
}

void cutTree(){
    long long left = 0, right = high;

    while(left <= right){
        int mid = (left + right) / 2;

        // 만일 가능하다면 높이를 높여야하므로
        if(isPossible(mid)){
            result = mid;
            left = mid + 1;
        }
        // 만일 가능하지 않다면 높이를 낮춰야하므로
        else{
            right = mid - 1;
        }
    }
}

int main(){

    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    input();
    cutTree();

    cout << result;

    return 0;
}

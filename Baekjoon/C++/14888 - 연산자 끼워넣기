#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#include <cmath>
#include <vector>

#define INF 1000000001
using namespace std;

// 14888 - 연산자 끼워넣기
int n;
long long minimum = INF, maximum = -INF;
vector<int> nums, operation(4);

void input(){
    cin >> n;
    nums.assign(n, 0);

    for(int i = 0; i < n; i++){
        cin >> nums[i];
    }
    for(int i = 0; i < 4; i++){
        cin >> operation[i];
    }
}

void backTracking(int cnt, long long value){
    if(cnt == n - 1){
        minimum = min(value, minimum);
        maximum = max(value, maximum);
        return;
    }

    // 4가지 연산자르 순회하면서 있다면 적용
    for(int i = 0; i < 4; ++i){
        if(operation[i] != 0){
            --operation[i];

            if(i == 0)  backTracking(cnt + 1, value + nums[cnt + 1]);
            else if(i == 1) backTracking(cnt + 1, value - nums[cnt + 1]);
            else if(i == 2) backTracking(cnt + 1, value * nums[cnt + 1]);
            else if(i == 3) backTracking(cnt + 1, value / nums[cnt + 1]);

            ++operation[i];
        }
    }
}

int main(){

    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);

    input();
    backTracking(0, nums[0]);

    cout << maximum << '\n' << minimum;

    return 0;
}

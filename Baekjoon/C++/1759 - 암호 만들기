#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <map>
#include <set>

#define MAX 20 + 1
using namespace std;

int L, C;
vector<char> v;


bool isVowel(char tmp){
    if(tmp == 'a' || tmp == 'e' || tmp == 'i' || tmp == 'o' || tmp == 'u'){
        return true;
    }
    else{
        return false;
    }
}

//
void BackTracking(string str, int idx,  int vowel, int consonant){

    if(str.length() == L){
        if(vowel < 1 || consonant < 2){ // 조건에 맞지 않으면 return
            return;
        }
        cout << str << endl;
        return;
    }

    for(int i = idx; i < C; i++){
        char candidate = v[i];
        if(isVowel(candidate)){
            BackTracking(str + candidate, i + 1, vowel + 1, consonant);
        }
        else{
            BackTracking(str + candidate, i + 1,  vowel, consonant + 1);
        }
    }
}

int main(void){

    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    cin >> L >> C;

    for(int i = 0; i < C; i++){
        char tmp;
        cin >> tmp;
        v.push_back(tmp);
    }
    sort(v.begin(), v.end());

    BackTracking("", 0, 0, 0);
    
    
    return 0;
}

#include <iostream>
#include <vector>
#include <queue>
#include <string.h>
#include <stack>

#define MAX 500 + 1
#define INF 100000000
using namespace std;

// 1520 - 내리막 길(Top-down)
int n, m; // 가로, 세로
int graph[MAX][MAX], dp[MAX][MAX];
int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, -1, 0, 1};

void input(){
    scanf("%d %d", &m, &n); //세로 가로 입력
    for(int i = 0; i < m; i++){
        for(int k = 0; k < n; k++){
            scanf("%d", &graph[i][k]);
            dp[i][k] = -1; // 경로가 없는 경우를 위해 -1로 초기화
        }
    }
}

bool isInside(int y, int x){
    return (0 <= y && y < m) && (0 <= x && x < n);
}

// Recursive DFS
int DFS(int y, int x){
    // 기저 사례
    if(y == m - 1 && x == n - 1){
        return 1;
    }
    if(dp[y][x] != -1){ // 이미 방문한 곳인 경우
        return dp[y][x];
    }
    dp[y][x] = 0;
    for(int i = 0; i < 4; i++){
        int next_y = y + dy[i];
        int next_x = x + dx[i];
        if(isInside(next_y, next_x) && graph[next_y][next_x] < graph[y][x]){
            // 이 부분이 핵심
            dp[y][x] = dp[y][x] + DFS(next_y, next_x);
        }
    }

    return dp[y][x];
}


int main(void) {

    input();
    int result = DFS(0,0);
    printf("%d", result);

    return 0;
}

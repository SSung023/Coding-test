#include <iostream>
#include <algorithm>
#include <string>
#include <string.h>
#include <vector>
#include <map>
#include <set>

#define MAX 20 + 1
using namespace std;

int n, s; // n개의 정수, 만들고 싶은 값
int result = 0;
bool isVisited[MAX];
vector<int> sequence, subsequence; // 수열, 부분 수열



void backTracking(int max_len, int len, int idx){
    if(len == max_len){
        int sum = 0;
        for(int i = 0; i < max_len; i++){
            sum += subsequence[i];
        }
        if(sum == s){
            result++;
        }
        return;

    }

    for(int i = idx; i < n; i++){
        if(!isVisited[i]){
            isVisited[i] = true;
            subsequence.push_back(sequence[i]);
            backTracking(max_len, len + 1, i);
            isVisited[i] = false;
            subsequence.pop_back();
        }
    }
}

int main(void){

    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin >> n >> s;
    for(int i = 0; i < n; i++){
        int tmp;
        cin >> tmp;
        sequence.push_back(tmp);
    }

    for(int i = 1; i <= n; i++){
        backTracking(i, 0, 0);
    }

    cout << result;

    return 0;
}
